AWSTemplateFormatVersion: 2010-09-09
Description: Network Management
Resources:
  CorpVPC:
    Type: "AWS::EC2::VPC"
    Properties: 
      CidrBlock: !Ref CorpVPCCidrBlock
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: CorpVPC
  CorpInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: CorpInternetGateway
  CorpVPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref CorpVPC
      InternetGatewayId: !Ref CorpInternetGateway
  CorpPublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref CorpVPC
      CidrBlock: !Ref CorpPublicSubnet1CidrBlock
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: CorpPublicSubnet1
  CorpPublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref CorpVPC
      CidrBlock: !Ref CorpPublicSubnet2CidrBlock
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: CorpPublicSubnet2
  CorpPublicSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref CorpVPC
      CidrBlock: !Ref CorpPublicSubnet3CidrBlock
      AvailabilityZone: !Ref AvailabilityZone3
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: CorpPublicSubnet3
  CorpPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref CorpVPC
      Tags:
        - Key: Name
          Value: CorpPublicRouteTable
  CorpPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: ["CorpVPCGatewayAttachment"]
    Properties:
      RouteTableId: !Ref CorpPublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref CorpInternetGateway
  CorpPublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CorpPublicSubnet1
      RouteTableId: !Ref CorpPublicRouteTable
  CorpPublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CorpPublicSubnet2
      RouteTableId: !Ref CorpPublicRouteTable
  CorpPublicSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CorpPublicSubnet3
      RouteTableId: !Ref CorpPublicRouteTable
  CorpPublicNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref CorpVPC
      Tags:
        - Key: Name
          Value: CorpPublicNetworkAcl
  CorpPublicNetworkAclEntryIngress1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpPublicNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'
  CorpPublicNetworkAclEntryIngress2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpPublicNetworkAcl
      RuleNumber: '101'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'
  CorpPublicNetworkAclEntryEgress1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpPublicNetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '80'
        To: '80'
  CorpPublicNetworkAclEntryEgress2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpPublicNetworkAcl
      RuleNumber: '101'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'
  CorpPublicSubnet1NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CorpPublicSubnet1
      NetworkAclId: !Ref CorpPublicNetworkAcl
  CorpPublicSubnet2NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CorpPublicSubnet2
      NetworkAclId: !Ref CorpPublicNetworkAcl
  CorpPublicSubnet3NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CorpPublicSubnet3
      NetworkAclId: !Ref CorpPublicNetworkAcl
  CorpDMZSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref CorpVPC
      CidrBlock: !Ref CorpDMZSubnet1CidrBlock
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: CorpDMZSubnet1
  CorpDMZSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref CorpVPC
      CidrBlock: !Ref CorpDMZSubnet2CidrBlock
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: CorpDMZSubnet2
  CorpDMZSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref CorpVPC
      CidrBlock: !Ref CorpDMZSubnet3CidrBlock
      AvailabilityZone: !Ref AvailabilityZone3
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: CorpDMZSubnet3
  CorpDMZRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref CorpVPC
      Tags:
        - Key: Name
          Value: CorpDMZRouteTable
  CorpDMZRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: ["CorpVPCGatewayAttachment"]
    Properties:
      RouteTableId: !Ref CorpDMZRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref CorpInternetGateway
  CorpDMZSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CorpDMZSubnet1
      RouteTableId: !Ref CorpDMZRouteTable
  CorpDMZSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CorpDMZSubnet2
      RouteTableId: !Ref CorpDMZRouteTable
  CorpDMZSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref CorpDMZSubnet3
      RouteTableId: !Ref CorpDMZRouteTable
  CorpDMZNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref CorpVPC
      Tags:
        - Key: Name
          Value: CorpDMZNetworkAcl
  CorpDMZNetworkAclEntryIngress1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpDMZNetworkAcl
      RuleNumber: '100'
      Protocol: '-1'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: !Ref OnPremCidr
      PortRange:
        From: '0'
        To: '65535'
  CorpDMZNetworkAclEntryIngress2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpDMZNetworkAcl
      RuleNumber: '101'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '443'
        To: '443'
  CorpDMZNetworkAclEntryIngress3:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpDMZNetworkAcl
      RuleNumber: '102'
      Protocol: '6'
      RuleAction: deny
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '3389'
        To: '3389'
  CorpDMZNetworkAclEntryIngress4:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpDMZNetworkAcl
      RuleNumber: '103'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '1024'
        To: '65535'
  CorpDMZNetworkAclEntryEgress1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref CorpDMZNetworkAcl
      RuleNumber: '100'
      Protocol: '-1'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'
  CorpDMZSubnet1NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CorpDMZSubnet1
      NetworkAclId: !Ref CorpDMZNetworkAcl
  CorpDMZSubnet2NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CorpDMZSubnet2
      NetworkAclId: !Ref CorpDMZNetworkAcl
  CorpDMZSubnet3NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref CorpDMZSubnet3
      NetworkAclId: !Ref CorpDMZNetworkAcl
Parameters:
  CorpVPCCidrBlock:
    Description: Corp VPC CIDR
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  AvailabilityZone1:
    Description: AWS Availability Zone 1
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  AvailabilityZone2:
    Description: AWS Availability Zone 2
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
  AvailabilityZone3:
    Description: AWS Availability Zone 3
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1c
  CorpPublicSubnet1CidrBlock:
    Description: Corp Public Subnet 1 CIDR
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.0.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  CorpPublicSubnet2CidrBlock:
    Description: Corp Public Subnet 2 CIDR
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.1.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  CorpPublicSubnet3CidrBlock:
    Description: Corp Public Subnet 3 CIDR
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.2.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  CorpDMZSubnet1CidrBlock:
    Description: Corp DMZ Subnet 1 CIDR
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.4.0/26
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  CorpDMZSubnet2CidrBlock:
    Description: Corp DMZ Subnet 2 CIDR
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.4.64/26
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  CorpDMZSubnet3CidrBlock:
    Description: Corp DMZ Subnet 3 CIDR
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.4.128/26
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  OnPremCidr:
    Description: >-
      IP Cidr from which you are likely to RDP/SSH into EC2 instances. You can add
      rules later by modifying any created network acls / security groups.
      e.g. 54.32.98.160/32
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          default: "Network Management"
        Parameters:
          - CorpVPCCidrBlock
          - AvailabilityZone1
          - AvailabilityZone2
          - AvailabilityZone3
          - CorpPublicSubnet1CidrBlock
          - CorpPublicSubnet2CidrBlock
          - CorpPublicSubnet3CidrBlock
          - CorpDMZSubnet1CidrBlock
          - CorpDMZSubnet2CidrBlock
          - CorpDMZSubnet3CidrBlock
          - OnPremCidr
    ParameterLabels:
      CorpVPCCidrBlock:
        default: "VPC CIDR"
      AvailabilityZone1: 
        default: "Availability Zone1"
      AvailabilityZone2: 
        default: "Availability Zone2"
      AvailabilityZone3: 
        default: "Availability Zone3"
      CorpPublicSubnet1CidrBlock:
        default: "Public Subnet1 CIDR"
      CorpPublicSubnet2CidrBlock:
        default: "Public Subnet2 CIDR"
      CorpPublicSubnet3CidrBlock:
        default: "Public Subnet3 CIDR"
      CorpDMZSubnet1CidrBlock:
        default: "DMZ Subnet1 CIDR"
      CorpDMZSubnet2CidrBlock:
        default: "DMZ Subnet2 CIDR"
      CorpDMZSubnet3CidrBlock:
        default: "DMZ Subnet3 CIDR"
      OnPremCidr:
        default: "OnPremise CIDR"